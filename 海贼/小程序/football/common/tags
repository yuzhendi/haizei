!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BLACK	color.h	12;"	d
BLUE	color.h	20;"	d
Ctrl	datatype.h	/^struct Ctrl {$/;"	s
DBG	common.h	17;"	d
DBG	common.h	19;"	d
FT_ACK	datatype.h	57;"	d
FT_MSG	datatype.h	56;"	d
FT_TEST	datatype.h	54;"	d
FT_WALL	datatype.h	55;"	d
FootBallMas	datatype.h	/^struct FootBallMas {$/;"	s
Football	game.h	/^WINDOW *Football, *Message, *Help, *Score, *Write;$/;"	v
GREEN	color.h	16;"	d
HEAD_H	head.h	9;"	d
Help	game.h	/^WINDOW *Football, *Message, *Help, *Score, *Write;$/;"	v
L_BLACK	color.h	13;"	d
L_BLUE	color.h	21;"	d
L_GREEN	color.h	17;"	d
L_PINK	color.h	22;"	d
L_RED	color.h	15;"	d
L_YELLOW	color.h	19;"	d
LogRequest	datatype.h	/^struct LogRequest {$/;"	s
LogResponse	datatype.h	/^struct LogResponse {$/;"	s
MAX	game.h	13;"	d
MAX	heart_beat.c	10;"	d	file:
MAX	sub_reactor.c	10;"	d	file:
MAX	udp_epoll.c	12;"	d	file:
MAXMSG	datatype.h	10;"	d
MAXTASK	thread_pool.h	12;"	d
MAXTHREAD	thread_pool.h	13;"	d
MAX_CLIENT	chatroom.h	46;"	d
Map	datatype.h	/^struct Map {$/;"	s
Message	game.h	/^WINDOW *Football, *Message, *Help, *Score, *Write;$/;"	v
Msg	chatroom.h	/^struct Msg {$/;"	s
NONE	color.h	11;"	d
PINK	color.h	23;"	d
Point	datatype.h	/^struct Point {$/;"	s
RED	color.h	14;"	d
RecvMsg	chatroom.h	/^struct RecvMsg {$/;"	s
Score	game.h	/^WINDOW *Football, *Message, *Help, *Score, *Write;$/;"	v
TransMsg	datatype.h	/^struct TransMsg {       \/\/传输的信息$/;"	s
User	datatype.h	/^struct User {$/;"	s
Write	game.h	/^WINDOW *Football, *Message, *Help, *Score, *Write;$/;"	v
YELLOW	color.h	18;"	d
_CHATROOM_H	chatroom.h	9;"	d
_COLOR_H	color.h	9;"	d
_COMMON_H	common.h	9;"	d
_DATATYPE_H	datatype.h	9;"	d
_GAME_H	game.h	10;"	d
_GLOBAL_H	global.h	9;"	d
_HEART_BEAT_H	heart_beat.h	9;"	d
_SUB_REACTOR_H	sub_reactor.h	9;"	d
_TCP_CLIENT_H	tcp_client.h	9;"	d
_TCP_SERVER_H	udp_server.h	9;"	d
_THREAD_POOL_H	thread_pool.h	9;"	d
_UDP_CLIENT_H	udp_client.h	9;"	d
_UDP_EPOLL_H	udp_epoll.h	9;"	d
add_event	udp_epoll.c	/^void  add_event(int epollfd, int fd, int events){$/;"	f
add_event_ptr	udp_epoll.c	/^void  add_event_ptr(int epollfd, int fd, int events, struct User *user){$/;"	f
add_to_sub_reactor	udp_epoll.c	/^void add_to_sub_reactor(struct User *user) {$/;"	f
addr	datatype.h	/^    struct sockaddr_in addr;\/\/地址$/;"	m	struct:User	typeref:struct:User::sockaddr_in
carry	datatype.h	/^    int carry;      \/\/带球$/;"	m	struct:Ctrl
chat_recv	chatroom.h	/^struct RecvMsg chat_recv(int fd) {$/;"	f
chat_send	chatroom.h	/^int chat_send(struct Msg msg, int fd) {$/;"	f
cond	thread_pool.h	/^    pthread_cond_t cond;$/;"	m	struct:task_queue
conf_ans	global.c	/^char conf_ans[50];$/;"	v
court	game.h	/^struct Map court;$/;"	v	typeref:struct:Map
create_newwin	game.h	/^WINDOW *create_newwin(int width, int heigth, int startx, int starty) {$/;"	f
ctrl	datatype.h	/^    struct Ctrl ctrl;$/;"	m	struct:TransMsg	typeref:struct:TransMsg::Ctrl
del_event	udp_epoll.c	/^void del_event(int epollfd, int fd, int events) {$/;"	f
destroy_win	game.h	/^void destroy_win(WINDOW *win) {$/;"	f
dirx	datatype.h	/^    int dirx;$/;"	m	struct:TransMsg
diry	datatype.h	/^    int diry;      \/\/两个方向$/;"	m	struct:TransMsg
do_echo	thread_pool.c	/^void do_echo(struct User *user) {$/;"	f
draw	game.h	/^void *draw(void *arg) {$/;"	f
epollfd	thread_pool.h	/^    int epollfd;$/;"	m	struct:task_queue
fd	datatype.h	/^    int fd;$/;"	m	struct:User
find_sub	udp_epoll.c	/^int find_sub(struct User *user) {$/;"	f
flag	chatroom.h	/^    int flag;$/;"	m	struct:Msg
flag	datatype.h	/^    int flag;       \/\/判断是否在线 UDP:未相应的次数$/;"	m	struct:User
from	chatroom.h	/^    char from[20];$/;"	m	struct:Msg
gate_heigth	datatype.h	/^    int gate_heigth;        \/\/球门的高度$/;"	m	struct:Map
gate_width	datatype.h	/^    int gate_width;         \/\/球门的宽度$/;"	m	struct:Map
get_value	common.c	/^char *get_value(char *path, char *key) {$/;"	f
gotoxy	game.h	/^void gotoxy(int x, int y) {$/;"	f
gotoxy_putc	game.h	/^void gotoxy_putc(int x, int y, int c) {$/;"	f
gotoxy_puts	game.h	/^void gotoxy_puts(int x, int y, char *s) {$/;"	f
head	thread_pool.h	/^    int head;$/;"	m	struct:task_queue
heart_beat	heart_beat.c	/^void *heart_beat(void *arg) {$/;"	f
heart_beat_team	heart_beat.c	/^void heart_beat_team(struct User *team) {$/;"	f
heigth	datatype.h	/^    int heigth;     \/\/高$/;"	m	struct:Map
initfootball	game.h	/^void initfootball() {       \/\/打印整个游戏场$/;"	f
kick	datatype.h	/^    int kick;       \/\/踢球$/;"	m	struct:Ctrl
loc	datatype.h	/^    struct Point loc;\/\/位置$/;"	m	struct:User	typeref:struct:User::Point
main	test.c	/^int main() {$/;"	f
make_block	common.c	/^void make_block(int fd) {$/;"	f
make_block_ioctl	common.c	/^void make_block_ioctl(int fd) {$/;"	f
make_nonblock	common.c	/^void make_nonblock(int fd) {$/;"	f
make_nonblock_ioctl	common.c	/^void make_nonblock_ioctl(int fd){$/;"	f
message	chatroom.h	/^    char message[512];$/;"	m	struct:Msg
msg	chatroom.h	/^    struct Msg msg;$/;"	m	struct:RecvMsg	typeref:struct:RecvMsg::Msg
msg	datatype.h	/^    char msg[512];$/;"	m	struct:LogRequest
msg	datatype.h	/^    char msg[512];$/;"	m	struct:LogResponse
msg	datatype.h	/^    char msg[MAXMSG];$/;"	m	struct:FootBallMas
mutex	thread_pool.h	/^    pthread_mutex_t mutex; \/\/互斥锁$/;"	m	struct:task_queue
name	datatype.h	/^    char name[20];$/;"	m	struct:LogRequest
name	datatype.h	/^    char name[20];$/;"	m	struct:User
online	datatype.h	/^    int online;$/;"	m	struct:User
out_fd	chatroom.h	/^    int out_fd;$/;"	m	struct:Msg
retval	chatroom.h	/^    int retval;$/;"	m	struct:RecvMsg
size	datatype.h	/^    int size;$/;"	m	struct:FootBallMas
sock_udp	udp_client.c	/^int sock_udp(){$/;"	f
socket_connect	tcp_client.c	/^int socket_connect(char *host, int port) {$/;"	f
socket_create_udp	udp_server.c	/^int socket_create_udp(int port) {$/;"	f
start	datatype.h	/^    struct Point start;     \/\/开始的点$/;"	m	struct:Map	typeref:struct:Map::Point
sub_reactor	sub_reactor.c	/^void *sub_reactor(void *arg) {$/;"	f
sum	thread_pool.h	/^    int sum;$/;"	m	struct:task_queue
tail	thread_pool.h	/^    int tail;$/;"	m	struct:task_queue
task_queue	thread_pool.h	/^struct task_queue{$/;"	s
task_queue_init	thread_pool.c	/^void task_queue_init(struct task_queue *task_Queue, int sum, int epollfd) {$/;"	f
task_queue_pop	thread_pool.c	/^struct User*task_queue_pop(struct task_queue *taskQueue) {$/;"	f
task_queue_push	thread_pool.c	/^void task_queue_push(struct task_queue *task_Queue, struct User *user) { $/;"	f
team	datatype.h	/^    int team;$/;"	m	struct:LogRequest
team	datatype.h	/^    int team;$/;"	m	struct:User
team	thread_pool.h	/^    struct User **team;$/;"	m	struct:task_queue	typeref:struct:task_queue::User
thread_run	thread_pool.c	/^void *thread_run(void *arg) {$/;"	f
toname	chatroom.h	/^    char toname[20];$/;"	m	struct:Msg
type	datatype.h	/^    int type; \/\/ 0: success  1: fail$/;"	m	struct:LogResponse
type	datatype.h	/^    int type;$/;"	m	struct:FootBallMas
udp_accept	udp_epoll.c	/^int udp_accept(int epollfd, int fd, struct User *user) {$/;"	f
udp_connect	udp_epoll.c	/^int udp_connect(int epollfd, struct sockaddr_in *serveraddr) {$/;"	f
w_gotoxy_putc	game.h	/^void w_gotoxy_putc(WINDOW *win, int x, int y, int c) {$/;"	f
w_gotoxy_puts	game.h	/^void w_gotoxy_puts(WINDOW *win, int x, int y, char *s) {$/;"	f
width	datatype.h	/^    int width;      \/\/地图的宽$/;"	m	struct:Map
x	datatype.h	/^    int x;$/;"	m	struct:Point
y	datatype.h	/^    int y;$/;"	m	struct:Point
